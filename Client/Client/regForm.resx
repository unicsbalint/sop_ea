<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>